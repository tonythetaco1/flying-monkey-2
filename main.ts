namespace SpriteKind {
    export const Background = SpriteKind.create()
    export const Mountain = SpriteKind.create()
}
function spawnSomething (roll: number) {
    if (roll <= 2) {
        createSaucer()
    } else if (roll <= 6) {
    	
    } else if (roll <= 24) {
        createCloud()
    } else if (roll <= 40) {
        createBird()
    }
}
function createSaucer () {
    if (Math.percentChance(50)) {
        saucerSpeed = 40
    } else {
        saucerSpeed = -40
    }
    saucer = sprites.createProjectileFromSide(img`
        ..ccc.........ffffff....
        ..f4cc.......fcc22ff....
        ..f44cc...fffccccff.....
        ..f244cccc22224442cc....
        ..f224cc2222222244b9c...
        ..cf2222222222222b999c..
        .c22c222222222b11199b2c.
        f22ccccccc222299111b222c
        fffffcc222c222222222222f
        .....f2222442222222222f.
        ....f222244fc2222222ff..
        ...c222244ffffffffff....
        ...c2222cfffc2f.........
        ...ffffffff2ccf.........
        .......ffff2cf..........
        ........fffff...........
        `, saucerSpeed, 0)
    animation.runImageAnimation(
    saucer,
    flyingSaucer,
    400,
    true
    )
    saucer.y = randint(10, scene.screenHeight() - 0)
    saucer.sayText("oh no our plane is crashing")
}
controller.anyButton.onEvent(ControllerButtonEvent.Pressed, function () {
    balloon.ay = -30
    balloon.setImage(balloonInflated)
})
function createAnimationArrays () {
    flyingSaucer = [img`
        ..ccc.........ffffff....
        ..f4cc.......fcc22ff....
        ..f44cc...fffccccff.....
        ..f244cccc22224442cc....
        ..f224cc2222222244b9c...
        ..cf2222222222222b999c..
        .c22c222222222b11199b2c.
        f22ccccccc222299111b222c
        fffffcc222c222222222222f
        .....f2222442222222222f.
        ....f222244fc2222222ff..
        ...c222244ffffffffff....
        ...c2222cfffc2f.........
        ...ffffffff2ccf.........
        .......ffff2cf..........
        ........fffff...........
        `, img`
        ..............ffffff....
        ..fc.........fccc2ff....
        ..f4c.....fffccc2ff.....
        ..f44ccccc22222222cc....
        ..f244ccc222224442b9c...
        ..cf24222222222244999c..
        .ccf2222222222222199b2c.
        fc22cc22222222b1111b222c
        f22ccccccc2222991222222f
        ffffffc222c22222222222f.
        ....ff222244c2222222ff..
        ...cf222244fffffffff....
        ...c222244ffc2f.........
        ...c2222cfffccf.........
        ...ffffffff2cf..........
        ........fff2c...........
        `]
    birdGoingLeft = [
    img`
        . . f f f . . . . . . . . . . . 
        f f f c c . . . . . . . . f f f 
        f f c c . . c c . . . f c b b c 
        f f c 3 c c 3 c c f f b b b c . 
        f f b 3 b c 3 b c f b b c c c . 
        . c b b b b b b c f b c b c c . 
        . c b b b b b b c b b c b b c . 
        c b 1 b b b 1 b b b c c c b c . 
        c b b b b b b b b c c c c c . . 
        f b c b b b c b b b b f c . . . 
        f b 1 f f f 1 b b b b f c c . . 
        . f b b b b b b b b c f . . . . 
        . . f b b b b b b c f . . . . . 
        . . . f f f f f f f . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `,
    img`
        . . . . . . . . . . . . . . . . 
        . . c c . . c c . . . . . . . . 
        . . c 3 c c 3 c c c . . . . . . 
        . c b 3 b c 3 b c c c . . . . . 
        . c b b b b b b b b f f . . . . 
        c c b b b b b b b b f f . . . . 
        c b 1 b b b 1 b b c f f f . . . 
        c b b b b b b b b f f f f . . . 
        f b c b b b c b c c b b b . . . 
        f b 1 f f f 1 b f c c c c . . . 
        . f b b b b b b f b b c c . . . 
        c c f b b b b b c c b b c . . . 
        c c c f f f f f f c c b b c . . 
        . c c c . . . . . . c c c c c . 
        . . c c c . . . . . . . c c c c 
        . . . . . . . . . . . . . . . . 
        `,
    img`
        . . f f f . . . . . . . . . . . 
        f f f c c . . . . . . . . f f f 
        f f c c . . c c . . . f c b b c 
        f f c 3 c c 3 c c f f b b b c . 
        f f b 3 b c 3 b c f b b c c c . 
        . c b b b b b b c f b c b c c . 
        . c b b b b b b c b b c b b c . 
        c b 1 b b b 1 b b b c c c b c . 
        c b b b b b b b b c c c c c . . 
        f b c b b b c b b b b f c . . . 
        f b 1 f f f 1 b b b b f c c . . 
        . f b b b b b b b b c f . . . . 
        . . f b b b b b b c f . . . . . 
        . . . f f f f f f f . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `,
    img`
        . f f f . . . . . . . . f f f . 
        f f c . . . . . . . f c b b c . 
        f c c . . . . . . f c b b c . . 
        c f . . . . . . . f b c c c . . 
        c f f . . . . . f f b b c c . . 
        f f f c c . c c f b c b b c . . 
        f f f c c c c c f b c c b c . . 
        . f c 3 c c 3 b c b c c c . . . 
        . c b 3 b c 3 b b c c c c . . . 
        c c b b b b b b b b c c . . . . 
        c 1 1 b b b 1 1 b b b f c . . . 
        f b b b b b b b b b b f c c . . 
        f b c b b b c b b b b f . . . . 
        . f 1 f f f 1 b b b c f . . . . 
        . . f b b b b b b c f . . . . . 
        . . . f f f f f f f . . . . . . 
        `
    ]
    birdGoingRight = [
    img`
        ...cc...................
        ..c36cccc...............
        ..c633336c..............
        .c33333cc6c.cc..........
        c33333c55c6c55b.........
        c33333ff5c6c5ff.........
        cc3336ff5c6c5ff.........
        cc6666c553c355b.........
        c333333c55355b..........
        c3333ccb55555cc.........
        .c33c55b4555455c........
        ..bbc5bb4444b45b........
        .b54c4555b4b554c........
        .c5c4c555c4c555c........
        .c5c4c5555c5555c........
        .ccc..ccccccccc.........
        `,
    img`
        . . . c c . . . . . . . . . . . 
        . . c 3 6 c 3 c c c c . c c . . 
        . . c 6 3 3 f f 5 c 6 c 5 f f . 
        . c 3 3 3 3 f f 5 c 6 c 5 f f . 
        c 3 3 3 3 3 c 5 5 5 c 5 5 5 b . 
        c 3 3 3 3 6 c 5 5 5 c 5 5 5 b . 
        c c 3 3 3 6 3 c 5 5 3 5 5 b b . 
        c c 6 6 3 3 3 c 5 5 3 5 5 b b . 
        c 3 3 3 3 c c b 5 5 5 5 5 c c . 
        c 3 3 3 c 5 5 b 4 5 5 5 4 5 5 c 
        . c 3 3 c 5 b b 4 4 4 4 b 4 5 b 
        . . b b c 4 5 5 5 b 4 b 5 5 4 c 
        . b 5 4 4 c 5 5 5 c 4 c 5 5 5 c 
        . c 5 c 4 c 5 5 5 c 4 c 5 5 5 c 
        . c 5 c 4 c 5 5 5 5 c 5 5 5 5 c 
        . c c c . . c c c c c c c c c . 
        `,
    img`
        ...cc...................
        ..c36cccc...............
        ..c633336c..............
        .c33333cc6c.cc..........
        c33333c55c6c55b.........
        c33333ff5c6c5ff.........
        cc3336ff5c6c5ff.........
        cc6666c553c355b.........
        c333333c55355b..........
        c3333ccb55555cc.........
        .c33c55b4555455c........
        ..bbc5bb4444b45b........
        .b54c4555b4b554c........
        .c5c4c555c4c555c........
        .c5c4c5555c5555c........
        .ccc..ccccccccc.........
        `,
    img`
        ...cc...................
        ..c36cccc...............
        ..c633336c..............
        .c333ccccccc............
        c333c555c555c...........
        c33c555c4c555c..........
        c33c555c4c555c..........
        cc3c555ccc55cc..........
        cc6c55c55c5c55c.........
        c33c4cff5ccc5ff.........
        c33c5cff5ccc5ff.........
        .ccc54c553c355c.........
        .c54c44c55555c..........
        .c5cccc45555cc..........
        .c5cccc4555cc...........
        .ccc..cccccc............
        `
    ]
}
controller.anyButton.onEvent(ControllerButtonEvent.Released, function () {
    balloon.ay = 50
    effects.clearParticles(balloon)
    balloon.setImage(balloonDeflated)
})
function createBird () {
    if (Math.percentChance(50)) {
        saucerSpeed = 20
        chosenAnimation = birdGoingRight
    } else {
        saucerSpeed = -20
        chosenAnimation = birdGoingLeft
    }
    bird = sprites.createProjectileFromSide(img`
        . . f f f . . . . . . . . . . . 
        f f f c c . . . . . . . . f f f 
        f f c c . . c c . . . f c b b c 
        f f c 3 c c 3 c c f f b b b c . 
        f f b 3 b c 3 b c f b b c c c . 
        . c b b b b b b c f b c b c c . 
        . c b b b b b b c b b c b b c . 
        c b 1 b b b 1 b b b c c c b c . 
        c b b b b b b b b c c c c c . . 
        f b c b b b c b b b b f c . . . 
        f b 1 f f f 1 b b b b f c c . . 
        . f b b b b b b b b c f . . . . 
        . . f b b b b b b c f . . . . . 
        . . . f f f f f f f . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, saucerSpeed, 0)
    animation.runImageAnimation(
    bird,
    chosenAnimation,
    100,
    true
    )
    bird.y = randint(12, scene.screenHeight() - 10)
}
function createCloud () {
    cloudImages = [img`
        ..................1111...............
        ................11111111.............
        ...............1111111111............
        ..............11111111111....11111...
        ..............111111111111.11111111..
        .............11111111111111111111111.
        ........11111111111111111111111111111
        .......111111111111111111111111111111
        1111111111111111111111111111111111111
        .111111111111111111111111111111111111
        .......111111111111111111111111111111
        .......................1111111111111.
        `, img`
        . . . 1 1 1 1 . . . 1 1 . . . . . . . . 
        . . 1 1 1 1 1 1 . 1 1 1 1 . . . . . . . 
        . 1 1 1 1 1 1 1 1 1 1 1 1 1 . . . . . . 
        . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 1 1 . . . 
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
        1 1 1 1 1 1 1 1 1 1 1 1 1 . . . . . . . 
        `, img`
        ............111111...........
        ..........111111111..........
        .........11111111111.........
        ........1111111111111........
        ........1111111111111........
        ........11111111111111.......
        ....111111111111111111111111.
        ...11111111111111111111111111
        ..111111111111111111111111111
        ..111111111111111111111111111
        11111111111111111111111111111
        .11111111111111111111.1.1111.
        1........11111111111.....11..
        11111111111111...............
        `]
    cloud = sprites.createProjectileFromSide(cloudImages[randint(0, cloudImages.length - 1)], -5, 0)
    cloud.z = -10
    cloud.setFlag(SpriteFlag.Ghost, true)
    cloud.y = randint(0, scene.screenHeight() * 0.6)
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {
    info.changeLifeBy(-1)
    otherSprite.setFlag(SpriteFlag.Ghost, true)
    sprite.say("ow!", 500)
})
function placeMountain (leftPosition: number) {
    lastCreatedMountain = sprites.create(mountains[randint(0, 1)], SpriteKind.Mountain)
    lastCreatedMountain.setFlag(SpriteFlag.Ghost, true)
    lastCreatedMountain.setFlag(SpriteFlag.AutoDestroy, true)
    lastCreatedMountain.bottom = scene.screenHeight()
    lastCreatedMountain.left = leftPosition
    lastCreatedMountain.z = -15
}
let nearGroundCount = 0
let cloud: Sprite = null
let cloudImages: Image[] = []
let bird: Sprite = null
let chosenAnimation: Image[] = []
let birdGoingRight: Image[] = []
let birdGoingLeft: Image[] = []
let flyingSaucer: Image[] = []
let saucer: Sprite = null
let saucerSpeed = 0
let lastCreatedMountain: Sprite = null
let mountains: Image[] = []
let balloon: Sprite = null
let balloonInflated: Image = null
let balloonDeflated: Image = null
balloonDeflated = img`
    . . . . . . . f f f f f . . . . 
    . . . . . . f e e e e e f . . . 
    . . . . . f e e e d d d d f . . 
    . . . . . f e e d f d d f d c . 
    . . . . f f e e d f d d f d c . 
    . . . f d d e e d d d d e e d c 
    . . . c d b e e d d c d d d d c 
    f f . c d b e e e d d c c c c c 
    f e f . c f f e e e d d d d f . 
    f e f . f e e e e f f f f f f . 
    f e f f e e e e e e e f f f f . 
    . f f e e e e f e f d d f d d f 
    . . f e e e e f e f b d f b d f 
    . . f e f f f f f f f f f f f f 
    . . f d d c f . . . . . . . . . 
    . . f f f f . . . . . . . . . . 
    `
balloonInflated = img`
    . . . . . . . f f f f f . . . . 
    . . . . . . f e e e e e f . . . 
    . . . . . f e e e d d d d f . . 
    . . . . . f e e d f d d f d c . 
    . . . . f f e e d f d d f d c . 
    . . . f d d e e d d d d e e d c 
    . . . c d b e e d d c d d d d c 
    f f . c d b e e e d d c c c c c 
    f e f . c f f e e e d d d d f . 
    f e f . f e e e e f f f f f f . 
    f e f f e e e e e e e f f f f . 
    . f f e e e e f e f d d f d d f 
    . . f e e e e f e f b d f b d f 
    . . f e f f f f f f f f f f f f 
    . . f d d c f . . . . . . . . . 
    . . f f f f . . . . . . . . . . 
    `
music.setVolume(0)
balloon = sprites.create(balloonDeflated, SpriteKind.Player)
scene.setBackgroundColor(9)
balloon.ay = 70
balloon.setStayInScreen(true)
balloon.z = 100
info.setScore(0)
info.setLife(3)
createAnimationArrays()
mountains = [img`
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    `, img`
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    ................................................................................
    `]
placeMountain(0)
placeMountain(lastCreatedMountain.right)
game.setDialogFrame(img`
    .....cccccccccccccc.....
    ...cbd111111111111dbc...
    ..cd1111111111111111dc..
    .cd111111111111111111dc.
    .b11111111111111111111b.
    cd11111111111111111111dc
    c1111111111111111111111c
    c1111111111111111111111c
    c1111111111111111111111c
    c1111111111111111111111c
    c1111111111111111111111c
    c1111111111111111111111c
    c1111111111111111111111c
    c1111111111111111111111c
    c1111111111111111111111c
    c1111111111111111111111c
    c1111111111111111111111c
    cd11111111111111111111dc
    .b11111111111111111111b.
    .cd111111111111111111dc.
    ..cd1111111111111111dc..
    ..b11d111111111111dbc...
    .b11bcccccccccccccc.....
    ccccc...................
    `)
game.showLongText("help Mr Monkey fly!", DialogLayout.Center)
for (let index = 0; index <= 1; index++) {
    spawnSomething(randint(0, 40))
}
game.onUpdate(function () {
    info.changeScoreBy(1)
})
game.onUpdate(function () {
    balloon.vy = Math.constrain(balloon.vy, -25, 25)
})
game.onUpdateInterval(750, function () {
    spawnSomething(randint(0, 100))
})
forever(function () {
    nearGroundCount = -1
    while (balloon.bottom >= scene.screenHeight() - 1) {
        balloon.say("pull up!", 100)
        nearGroundCount += 1
        if (nearGroundCount > 25) {
            info.changeLifeBy(-1)
            nearGroundCount = -20
            pause(25)
        }
    }
})
game.onUpdateInterval(200, function () {
    // changing position explicitly to avoid fractions of
    // movement / clipping
    for (let value of sprites.allOfKind(SpriteKind.Mountain)) {
        value.x += -1
    }
    if (lastCreatedMountain.right < scene.screenWidth()) {
        placeMountain(lastCreatedMountain.right)
    }
})
